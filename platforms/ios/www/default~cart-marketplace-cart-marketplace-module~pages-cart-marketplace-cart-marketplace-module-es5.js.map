{"version":3,"sources":["webpack:///src/app/pages/cart-marketplace/cart-marketplace.module.ts","webpack:///src/app/pages/cart-marketplace/cart-marketplace.page.ts","webpack:///src/app/pages/modal-registrar-tarjeta/modal-registrar-tarjeta.page.html","webpack:///src/app/pages/modal-ubicaciones-guardadas/modal-ubicaciones-guardadas.page.ts","webpack:///src/app/pages/modal-metodos-pago-guardados/modal-metodos-pago-guardados.page.scss","webpack:///src/app/pages/modal-ubicaciones-guardadas/modal-ubicaciones-guardadas.page.scss","webpack:///src/app/pages/modal-registrar-tarjeta/modal-registrar-tarjeta.page.ts","webpack:///src/app/pages/modal-registrar-tarjeta/modal-registrar-tarjeta.page.scss","webpack:///src/app/pages/cart-marketplace/cart-marketplace-routing.module.ts","webpack:///src/app/pages/modal-metodos-pago-guardados/modal-metodos-pago-guardados.page.html","webpack:///src/app/pages/cart-marketplace/cart-marketplace.page.scss","webpack:///src/app/pages/modal-metodos-pago-guardados/modal-metodos-pago-guardados.page.ts","webpack:///src/app/pages/cart-marketplace/cart-marketplace.page.html","webpack:///src/app/pages/modal-ubicaciones-guardadas/modal-ubicaciones-guardadas.page.html"],"names":["CartMarketplacePageModule","imports","declarations","CartMarketplacePage","cartMarketplaceService","usuarioService","modalCtrl","cart","ubicaciones","tarjetas","getUbicacionesUsuario","getTarjetasUsuario","getCart","then","resolve","subscribe","resp","create","component","componentProps","modal","present","onDidDismiss","console","log","product","decreaseProduct","addProducto","removeProduct","reduce","i","j","precio","cantidad","selector","template","ModalUbicacionesGuardadasPage","dismiss","nombres","pais","ModalRegistrarTarjetaPage","tarjeta","etiqueta","marca","routes","path","CartMarketplacePageRoutingModule","forChild","exports","ModalMetodosPagoGuardadosPage","seleccionado"],"mappings":"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","file":"default~cart-marketplace-cart-marketplace-module~pages-cart-marketplace-cart-marketplace-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CartMarketplacePageRoutingModule } from './cart-marketplace-routing.module';\n\nimport { CartMarketplacePage } from './cart-marketplace.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CartMarketplacePageRoutingModule\n  ],\n  declarations: [CartMarketplacePage]\n})\nexport class CartMarketplacePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Producto } from '../../interfaces/interfaces';\nimport { CartMarketplaceService } from '../../services/cart-marketplace.service';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { ModalUbicacionesGuardadasPage } from '../modal-ubicaciones-guardadas/modal-ubicaciones-guardadas.page';\nimport { ModalController } from '@ionic/angular';\nimport { ModalMetodosPagoGuardadosPage } from '../modal-metodos-pago-guardados/modal-metodos-pago-guardados.page';\n\n@Component({\n  selector: 'app-cart-marketplace',\n  templateUrl: './cart-marketplace.page.html',\n  styleUrls: ['./cart-marketplace.page.scss'],\n})\nexport class CartMarketplacePage implements OnInit {\n  cart: Producto[] = [];\n  ubicaciones: any = [];\n  tarjetas: any = [];\n\n\n  constructor(private cartMarketplaceService: CartMarketplaceService,\n    private usuarioService: UsuarioService,\n    private modalCtrl: ModalController) {\n    this.getUbicacionesUsuario();\n    this.getTarjetasUsuario();\n  }\n\n  ngOnInit() {\n    this.cart = this.cartMarketplaceService.getCart();\n  }\n\n  getUbicacionesUsuario() {\n    this.usuarioService.getUbicacionesUsuario().then(resolve => {\n      resolve.subscribe(resp => {\n        this.ubicaciones = resp;\n      })\n    });\n  }\n\n  getTarjetasUsuario() {\n    this.usuarioService.getTarjetasUsuario().then(resolve => {\n      resolve.subscribe(resp => {\n        this.tarjetas = resp;\n      })\n    });\n  }\n\n  async abrirUbicacionesGuardadas() {\n    const modal = await this.modalCtrl.create({\n      component: ModalUbicacionesGuardadasPage,\n      componentProps: {\n        ubicaciones: this.ubicaciones,\n      }\n    });\n    await modal.present();\n    const resp = await modal.onDidDismiss();\n    console.log(resp);\n  }\n\n  async abrirMetodosPagoGuardados() {\n    const modal = await this.modalCtrl.create({\n      component: ModalMetodosPagoGuardadosPage,\n      componentProps: {\n        tarjetas: this.tarjetas,\n      }\n    });\n    await modal.present();\n    const resp = await modal.onDidDismiss();\n  }\n\n  decreaseCartItem(product) {\n    this.cartMarketplaceService.decreaseProduct(product);\n  }\n\n  increaseCartItem(product) {\n    this.cartMarketplaceService.addProducto(product);\n  }\n\n  removeCartItem(product) {\n    this.cartMarketplaceService.removeProduct(product);\n  }\n\n  getTotal() {\n    return this.cart.reduce((i, j) => i + j.precio * j.cantidad, 0);\n  }\n\n\n  // async checkout() {\n  //   // Perfom PayPal or Stripe checkout process\n\n  //   let alert = await this.alertCtrl.create({\n  //     header: 'Thanks for your Order!',\n  //     message: 'We will deliver your food as soon as possible',\n  //     buttons: ['OK']\n  //   });\n  //   alert.present().then(() => {\n  //     this.modalCtrl.dismiss();\n  //   });\n  // }\n\n\n\n}\n","export default \"<app-modal-header-back titulo=\\\"AÃ±adir tarjeta\\\" icon_name=\\\"close-outline\\\"></app-modal-header-back>\\n<ion-content>\\n  <form>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\" [(ngModel)]=\\\"tarjeta.etiqueta\\\" name=\\\"etiqueta\\\">NÃºmero de tarjeta</ion-label>\\n      <ion-input type=\\\"number\\\"></ion-input>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\" [(ngModel)]=\\\"tarjeta.etiqueta\\\" name=\\\"etiqueta\\\">Fecha de vto.</ion-label>\\n          <ion-input type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">CVV</ion-label>\\n          <ion-input type=\\\"number\\\"></ion-input>\\n        </ion-item>\\n      </ion-col>\\n    </ion-row>\\n    <ion-button (click)=\\\"registrarTarjeta()\\\" expand=\\\"block\\\" shape=\\\"round\\\">\\n      Registar\\n    </ion-button>\\n  </form>\\n</ion-content>\";","import { Component, Input, OnInit } from '@angular/core';\nimport { async } from '@angular/core/testing';\nimport { ModalController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-modal-ubicaciones-guardadas',\n  templateUrl: './modal-ubicaciones-guardadas.page.html',\n  styleUrls: ['./modal-ubicaciones-guardadas.page.scss'],\n})\nexport class ModalUbicacionesGuardadasPage implements OnInit {\n  @Input() ubicaciones: any;\n  constructor(private modalCtrl: ModalController) { }\n\n  ngOnInit() {\n\n  }\n  salirConArgumentos() {\n    this.modalCtrl.dismiss({\n      nombres: 'Felipe',\n      pais: 'EspaÃ±a'\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb2RhbC1tZXRvZG9zLXBhZ28tZ3VhcmRhZG9zLnBhZ2Uuc2NzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb2RhbC11YmljYWNpb25lcy1ndWFyZGFkYXMucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Tarjeta } from '../../interfaces/interfaces';\n\n@Component({\n  selector: 'app-modal-registrar-tarjeta',\n  templateUrl: './modal-registrar-tarjeta.page.html',\n  styleUrls: ['./modal-registrar-tarjeta.page.scss'],\n})\nexport class ModalRegistrarTarjetaPage implements OnInit {\ntarjeta:Tarjeta={\n  etiqueta:'**123',\n  marca:'Visa',\n}\n  constructor() { }\n\n  ngOnInit() {\n  }\n  registrarTarjeta(){\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtb2RhbC1yZWdpc3RyYXItdGFyamV0YS5wYWdlLnNjc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartMarketplacePage } from './cart-marketplace.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CartMarketplacePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CartMarketplacePageRoutingModule {}\n","export default \"<app-modal-header-back titulo=\\\"Metodos de pago\\\"></app-modal-header-back>\\n<ion-content>\\n  <ion-list>\\n    <ion-list-header>\\n      <ion-label>Opciones de pago</ion-label>\\n    </ion-list-header>\\n    <!-- <ion-list-header>\\n      <ion-label>MÃ©todos de pago</ion-label>\\n    </ion-list-header>\\n    <ion-item (click)=\\\"addTarjetaUsuario()\\\">\\n      <ion-icon name=\\\"add-sharp\\\" slot=\\\"start\\\" color=\\\"promogreen\\\"></ion-icon>\\n      <ion-label color=\\\"promogreen\\\">AÃ±adir tarjeta</ion-label>\\n    </ion-item>\\n    <ion-item *ngFor=\\\"let tarjeta of tarjetas\\\" (click)=\\\"seleccionarMetodoPago()\\\">\\n      <ion-icon name=\\\"card-outline\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>{{tarjeta.etiqueta}}</ion-label>\\n      <ion-icon name=\\\"checkmark-outline\\\" slot=\\\"end\\\" color=\\\"promoshop\\\"></ion-icon>\\n    </ion-item>\\n    <ion-item (click)=\\\"seleccionarMetodoPago()\\\">\\n      <ion-icon name=\\\"cash-outline\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>Efectivo</ion-label>\\n      <ion-icon name=\\\"checkmark-outline\\\" slot=\\\"end\\\" color=\\\"promoshop\\\" *ngIf=\\\"seleccionado == true\\\"></ion-icon>\\n    </ion-item> -->\\n    <ion-item (click)=\\\"addTarjetaUsuario()\\\">\\n      <ion-icon name=\\\"add-sharp\\\" slot=\\\"start\\\" color=\\\"promogreen\\\"></ion-icon>\\n      <ion-label color=\\\"promogreen\\\">AÃ±adir tarjeta</ion-label>\\n    </ion-item>\\n    <ion-radio-group allow-empty-selection value=\\\"1\\\">\\n      <ion-item *ngFor=\\\"let tarjeta of tarjetas\\\" (click)=\\\"seleccionarMetodoPago()\\\">\\n        <ion-icon name=\\\"card-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label>{{tarjeta.etiqueta}}</ion-label>\\n        <ion-radio value=\\\"{{tarjeta.id}}\\\" color=\\\"promogreen\\\"></ion-radio>\\n      </ion-item>\\n      <ion-item>\\n        <ion-icon name=\\\"cash-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label>Efectivo</ion-label>\\n        <ion-radio value=\\\"0\\\" color=\\\"promogreen\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n</ion-content>\";","export default \".crop {\\n  width: 100px;\\n  height: 100px;\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NhcnQtbWFya2V0cGxhY2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFFO0VBQ00sWUFBQTtFQUNBLGFBQUE7RUFDQSxnQkFBQTtBQUNSIiwiZmlsZSI6ImNhcnQtbWFya2V0cGxhY2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICAuY3JvcCB7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgICAgaGVpZ2h0OiAxMDBweDtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgfVxuIl19 */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ModalRegistrarTarjetaPage } from '../modal-registrar-tarjeta/modal-registrar-tarjeta.page';\n\n\n@Component({\n  selector: 'app-modal-metodos-pago-guardados',\n  templateUrl: './modal-metodos-pago-guardados.page.html',\n  styleUrls: ['./modal-metodos-pago-guardados.page.scss'],\n})\nexport class ModalMetodosPagoGuardadosPage implements OnInit {\n  @Input() tarjetas: any;\n  seleccionado: boolean = false;\n\n  constructor(private modalCtrl: ModalController) { }\n\n  ngOnInit() {\n  }\n\n  seleccionarMetodoPago() {\n    this.seleccionado = !this.seleccionado;\n  }\n  async addTarjetaUsuario() {\n    const modal = await this.modalCtrl.create({\n      component: ModalRegistrarTarjetaPage\n    });\n    await modal.present();\n    const resp = await modal.onDidDismiss();\n\n  }\n\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-list>\\n    <ng-container *ngFor=\\\"let ubicacionDefault of ubicaciones\\\">\\n      <ion-item *ngIf=\\\"ubicacionDefault.default == true\\\" detail (click)=\\\"abrirUbicacionesGuardadas()\\\">\\n        <ion-icon name=\\\"location\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label>\\n          <h2 class=\\\"ion-text-capitalize\\\">{{ubicacionDefault.titulo}}</h2>\\n          <p class=\\\"ion-text-capitalize\\\">{{ubicacionDefault.referencia}}</p>\\n        </ion-label>\\n      </ion-item>\\n    </ng-container>\\n    <ion-item (click)=\\\"abrirMetodosPagoGuardados()\\\" detail>\\n      <ion-icon name=\\\"cash-outline\\\" slot=\\\"start\\\"></ion-icon>\\n      <ion-label>\\n        Metodo de pago\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n  <div *ngIf=\\\"cart.length > 0; else mensajeComprar\\\">\\n    <ion-list class=\\\"ion-padding\\\">\\n      <ion-list-header>\\n        <ion-label>Tus articulos</ion-label>\\n      </ion-list-header>\\n      <ion-item *ngFor=\\\"let p of cart\\\">\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"8\\\" class=\\\"ion-text-center\\\">\\n              <img src=\\\"{{p.imagenes[0].imagen}}\\\" class=\\\"crop\\\">\\n            </ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <b>{{ p.nombre }}</b>\\n              {{ p.cantidad * p.precio | currency:'USD' }}\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"decreaseCartItem(p)\\\">\\n                <ion-icon name=\\\"remove-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n              {{ p.cantidad }}\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-text-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"increaseCartItem(p)\\\">\\n                <ion-icon name=\\\"add-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\" class=\\\"ion-text-right\\\">\\n              <ion-button color=\\\"danger\\\" fill=\\\"clear\\\" (click)=\\\"removeCartItem(p)\\\">\\n                <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n\\n        </ion-grid>\\n      </ion-item>\\n\\n    </ion-list>\\n    <ion-grid fixed>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          Subtotal:\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          {{ getTotal() | currency:'USD' }}\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          Costo de envio:\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          {{ getTotal() | currency:'USD' }}\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"6\\\">\\n          Total a pagar:\\n        </ion-col>\\n        <ion-col size=\\\"6\\\">\\n          {{ getTotal() | currency:'USD' }}\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    <ion-button expand=\\\"block\\\" (click)=\\\"checkout()\\\" color=\\\"promoshop\\\">\\n      Finalizar compra\\n    </ion-button>\\n  </div>\\n  <ng-template #mensajeComprar>\\n    <h1>Aun no compras nada :(</h1>\\n  </ng-template>\\n</ion-content>\";","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"salirConArgumentos()\\\" fill=\\\"clear\\\">\\n        <ion-icon color=\\\"promoshop\\\" name=\\\"arrow-back-outline\\\" size=\\\"large\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>Ubicaciones guardadas</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let ubicacion of ubicaciones\\\">\\n      <ion-icon name=\\\"home-outline\\\" slot=\\\"start\\\" *ngIf=\\\"ubicacion.etiqueta == 'casa'\\\"></ion-icon>\\n      <ion-icon name=\\\"business-outline\\\" slot=\\\"start\\\" *ngIf=\\\"ubicacion.etiqueta == 'trabajo'\\\"></ion-icon>\\n      <ion-label>\\n        <h2>{{ubicacion.titulo}}</h2>\\n        <p>{{ubicacion.referencia}}</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n  \\n</ion-content>\\n\";"]}