{"version":3,"sources":["webpack:///src/app/pages/tab3/tab3-routing.module.ts","webpack:///src/app/pages/tab3/tab3.page.html","webpack:///src/app/pages/tab3/tab3.module.ts","webpack:///src/app/pages/tab3/tab3.page.ts","webpack:///src/app/pages/tab3/tab3.page.scss"],"names":["routes","path","component","Tab3PageRoutingModule","imports","forChild","exports","Tab3PageModule","declarations","Tab3Page","loadingCtrl","toastCtrl","platform","modalCtrl","ready","then","document","URL","startsWith","setEnv","API_KEY_FOR_BROWSER_RELEASE","API_KEY_FOR_BROWSER_DEBUG","create","modal","present","loadMap","map","camera","target","lat","lng","zoom","tilt","clear","message","loading","getMyLocation","location","dismiss","animateCamera","latLng","marker","addMarkerSync","title","snippet","position","animation","BOUNCE","showInfoWindow","on","MARKER_CLICK","subscribe","showToast","error","error_message","mensaje","duration","toast","selector","template"],"mappings":"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","file":"tab3-tab3-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Tab3Page } from './tab3.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab3Page,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class Tab3PageRoutingModule {}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Tab 3\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  \\n<ion-button (click)=\\\"abrirMapa()\\\" expand=\\\"block\\\" fill=\\\"clear\\\" shape=\\\"round\\\">\\n  Mapa\\n</ion-button>\\n\\n\\n</ion-content>\\n\";","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab3Page } from './tab3.page';\nimport { ExploreContainerComponentModule } from '../../explore-container/explore-container.module';\n\nimport { Tab3PageRoutingModule } from './tab3-routing.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab3Page }]),\n    Tab3PageRoutingModule,\n  ],\n  declarations: [Tab3Page]\n})\nexport class Tab3PageModule {}\n","import { Component } from '@angular/core';\nimport { ModalVerPedidoPage } from '../modal-ver-pedido/modal-ver-pedido.page';\nimport { ModalController } from '@ionic/angular';\nimport { Platform, LoadingController, ToastController } from \"@ionic/angular\";\nimport {\n  GoogleMaps,\n  GoogleMap,\n  GoogleMapsEvent,\n  GoogleMapOptions,\n  CameraPosition,\n  MarkerOptions,\n  GoogleMapsAnimation,\n  MyLocation,\n  Marker,\n  Environment\n} from '@ionic-native/google-maps';\n\n@Component({\n  selector: 'app-tab3',\n  templateUrl: 'tab3.page.html',\n  styleUrls: ['tab3.page.scss']\n})\nexport class Tab3Page {\n  map: GoogleMap;\n  loading: any;\n\n  constructor( public loadingCtrl: LoadingController,\n    public toastCtrl: ToastController,\n    private platform: Platform,\n    private modalCtrl: ModalController) { \n\n      platform.ready().then(() => {\n        if (document.URL.startsWith('http')){\n          Environment.setEnv({\n            API_KEY_FOR_BROWSER_RELEASE: \"AIzaSyA9esa9PaJXtLN_vJLo1Uvgv3saFYh1n6k\",\n            API_KEY_FOR_BROWSER_DEBUG: \"AIzaSyA9esa9PaJXtLN_vJLo1Uvgv3saFYh1n6k\"\n          });\n        }\n    });\n    }\n\n\n\n    async abrirMapa() {\n      const modal = await this.modalCtrl.create({\n        component: ModalVerPedidoPage,\n  \n      });\n      await modal.present();\n      // const resp = await modal.onDidDismiss();\n      // console.log(resp);\n    }\n\n  async ngOnInit() {\n    await this.platform.ready();\n    await this.loadMap();\n  }\n\n  loadMap() {\n    // Esta función inicializa la propiedad de clase\n    // map\n    // que va a contener el control de nuestro mapa de google\n\n    // Para crear nuestro mapa debemos enviar como parametros\n    // el id del div en donde se va a renderizar el mapa (paso anterior)\n    // y las opciones que configuran nuestro mapa\n  // This code is necessary for browser\n\n    this.map = GoogleMaps.create(\"map_canvas\", {\n      camera: {\n        target: {\n          lat: -2.1537488,\n          lng: -79.8883037\n        },\n        zoom: 18,\n        tilt: 30\n      }\n    });\n  }\n\n  async localizar() {\n    // Limpiamos todos los elementos de nuestro mapa\n    this.map.clear();\n\n    // Creamos un componente de Ionic para mostrar un mensaje\n    // mientras obtenemos esperamos que termine el proceso de\n    // obtener la ubicación\n    this.loading = await this.loadingCtrl.create({\n      message: \"Espera por favor...\"\n    });\n\n    // Presentamos el componente creado en el paso anterior\n    await this.loading.present();\n\n    // Ejecutamos el método getMyLocation de nuestra propiedad de clase\n    // map\n    // para obtener nuestra ubicación actual\n    this.map\n      .getMyLocation()\n      .then((location: MyLocation) => {\n        // Una vez obtenida la ubicación cerramos el mensaje de diálogo\n        this.loading.dismiss();\n\n        // Movemos la camara a nuestra ubicación con una pequeña animación\n        this.map.animateCamera({\n          target: location.latLng,\n          zoom: 17,\n          tilt: 30\n        });\n\n        // Agregamos un nuevo marcador\n        let marker: Marker = this.map.addMarkerSync({\n          title: \"Estoy aquí!\",\n          snippet: \"This plugin is awesome!\",\n          position: location.latLng,\n          animation: GoogleMapsAnimation.BOUNCE\n        });\n\n        // Mostramos un InfoWindow\n        marker.showInfoWindow();\n\n        // Podemos configurar un evento que se ejecute cuando\n        // se haya dado clic\n        marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(() => {\n          this.showToast(\"clicked!\");\n        });\n      })\n      .catch(error => {\n        // En caso de que haya un problema en obtener la\n        // ubicación\n        this.loading.dismiss();\n        this.showToast(error.error_message);\n      });\n  }\n\n  // Función que muestra un Toast en la parte inferior\n  // de la pantalla\n  async showToast(mensaje) {\n    let toast = await this.toastCtrl.create({\n      message: mensaje,\n      duration: 2000,\n      position: \"bottom\"\n    });\n\n    toast.present();\n  }\n\n  // loadMap() {\n\n  //   // This code is necessary for browser\n  //   Environment.setEnv({\n  //     'API_KEY_FOR_BROWSER_RELEASE': 'AIzaSyA9esa9PaJXtLN_vJLo1Uvgv3saFYh1n6k',\n  //     'API_KEY_FOR_BROWSER_DEBUG': 'AIzaSyA9esa9PaJXtLN_vJLo1Uvgv3saFYh1n6k'\n  //   });\n\n  //   let mapOptions: GoogleMapOptions = {\n  //     camera: {\n  //       target: {\n  //         lat: 43.0741904,\n  //         lng: -89.3809802\n  //       },\n  //       zoom: 18,\n  //       tilt: 30\n  //     }\n  //   };\n\n  //   this.map = GoogleMaps.create('map_canvas', mapOptions);\n\n  //   let marker: Marker = this.map.addMarkerSync({\n  //     title: 'Ionic',\n  //     icon: 'blue',\n  //     animation: 'DROP',\n  //     position: {\n  //       lat: 43.0741904,\n  //       lng: -89.3809802\n  //     }\n  //   });\n  //   marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(() => {\n  //     alert('clicked');\n  //   });\n  // }\n\n}\n","export default \"#map_canvas {\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3RhYjMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUFDSiIsImZpbGUiOiJ0YWIzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNtYXBfY2FudmFzIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gIH0iXX0= */\";"]}