{"version":3,"sources":["./src/app/pages/ver-servicios/ver-servicios-routing.module.ts","./src/app/pages/ver-servicios/ver-servicios.page.ts","./src/app/pages/ver-servicios/ver-servicios.page.html","./src/app/pages/ver-servicios/ver-servicios.module.ts","./src/app/pages/ver-servicios/ver-servicios.page.scss","./src/app/services/servicio.service.ts"],"names":[],"mappings":"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","file":"pages-ver-servicios-ver-servicios-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VerServiciosPage } from './ver-servicios.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerServiciosPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VerServiciosPageRoutingModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonSegment } from '@ionic/angular';\nimport { ServicioService } from '../../services/servicio.service';\n\n@Component({\n  selector: 'app-ver-servicios',\n  templateUrl: './ver-servicios.page.html',\n  styleUrls: ['./ver-servicios.page.scss'],\n})\nexport class VerServiciosPage implements OnInit {\n  servicios: any[] = [];\n  habilitado = true;\n  categorias: any;\n  @ViewChild(IonSegment) segment: IonSegment;\n\n  constructor(private servicioService: ServicioService) { }\n\n  async ngOnInit() {\n    await this.getCategorias();\n    // this.segment.value = \"\"+22;\n    this.cargarServicios('todas');\n  }\n\n  getCategorias() {\n    this.servicioService.getCategoriasServicios().subscribe(resp => {\n      this.categorias = resp;\n      console.log(this.categorias[0].id);\n    })\n  }\n  recargar(event) {\n    this.cargarServicios(this.segment.value, event, true);\n    this.servicios = [];\n    this.habilitado = true;\n  }\n  // getServiciosPorCategoria(event, pull: boolean = false) {\n  //   console.log(event.detail.value);\n  //   this.servicioService.getListaServiciosPorCategoria(pull,event.detail.value).subscribe(resp => {\n  //     this.servicios.push(...resp['results']);\n  //     if (event) {\n  //       event.target.complete();\n  //       if (resp['next'] === null) {\n  //         this.habilitado = false;\n  //       }\n  //     }\n  //   });\n  // }\n  // siguientes(event?, pull: boolean = false) {\n\n  //     this.servicioService.getListaServicios(pull).subscribe(resp => {\n  //       this.servicios.push(...resp['results']);\n  //       if (event) {\n  //         event.target.complete();\n  //         if (resp['next'] === null) {\n  //           this.habilitado = false;\n  //         }\n  //       }\n  //     });\n\n  // }\n\n  cambioCategoria(event) {\n    this.servicios = [];\n    this.cargarServicios(event.detail.value);\n    this.habilitado = true;\n  }\n\n  cargarServicios(categoria: string, event?, pull: boolean = false) {\n    this.servicioService.getListaServiciosPorCategoria(categoria, pull).subscribe(resp => {\n      this.servicios.push(...resp['results']);\n      if (event) {\n        event.target.complete();\n        if (resp['next'] === null) {\n          this.habilitado = false;\n        }\n      }\n    }, error => {\n      this.habilitado = false;\n    });\n  }\n\n\n  loadData(event) {\n    this.cargarServicios(this.segment.value, event);\n  }\n\n\n\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/main\\\" \\n      text=\\\"\\\" \\n      color=\\\"promoshop\\\"\\n      mode=\\\"ios\\\"\\n      ></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Servicios</ion-title>\\n  </ion-toolbar>\\n  <ion-segment scrollable (ionChange)=\\\"cambioCategoria($event)\\\" mode=\\\"md\\\" color=\\\"promoshop\\\" value=\\\"todas\\\">\\n    <ion-segment-button  value=\\\"todas\\\" mode=\\\"md\\\">\\n      <ion-label>Todas</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button *ngFor=\\\"let categoria of categorias\\\" value=\\\"{{categoria.id}}\\\" mode=\\\"md\\\">\\n      <ion-label>{{categoria.nombre}}</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n</ion-header>\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"recargar($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <app-empresa-horizontal *ngFor=\\\"let servicio of servicios\\\" [empresa]=\\\"servicio\\\">\\n  </app-empresa-horizontal>\\n  <ion-infinite-scroll threshold=\\\"25%\\\" [disabled]=\\\"!habilitado\\\" position=\\\"bottom\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VerServiciosPageRoutingModule } from './ver-servicios-routing.module';\n\nimport { VerServiciosPage } from './ver-servicios.page';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VerServiciosPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [VerServiciosPage]\n})\nexport class VerServiciosPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ZXItc2VydmljaW9zLnBhZ2Uuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nconst URL = environment.url;\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicioService {\n  servicios: any;\n  paginaServicios = 0;\n  categoriaActual = '';\n\n  constructor(private http: HttpClient) { }\n\n  // getListaServicios(pull: boolean = false,categoria_id='todas') {\n  //   if (pull) {\n  //     this.paginaServicios = 0;\n  //   }\n  //   this.paginaServicios++;\n  //   return this.http.get(`${URL}/listaserviciosporcategoria/${categoria_id}?page=${this.paginaServicios}`);\n  // }\n\n  getListaServicios(categoria_id = 'todas') {\n    // if (pull) {\n    //   this.paginaServicios = 0;\n    // }\n    this.paginaServicios++;\n    return this.http.get(`${URL}/listaserviciosporcategoria/${categoria_id}?page=${this.paginaServicios}`);\n  }\n\n  getListaServiciosPorCategoria(categoria, pull: boolean) {\n    if (pull) {\n      this.paginaServicios = 0;\n    }\n    // this.paginaServicios++;\n\n    if (this.categoriaActual === categoria) {\n      this.paginaServicios++;\n\n    } else {\n      this.paginaServicios = 1;\n      this.categoriaActual = categoria;\n    }\n\n\n    return this.http.get(`${URL}/listaserviciosporcategoria/${categoria}?page=${this.paginaServicios}`);\n  }\n\n  getCategoriasServicios() {\n    return this.http.get(`${URL}/listacategoriasservicios`);\n  }\n}\n"],"sourceRoot":"webpack:///"}