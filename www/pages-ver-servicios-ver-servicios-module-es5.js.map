{"version":3,"sources":["webpack:///src/app/pages/ver-servicios/ver-servicios-routing.module.ts","webpack:///src/app/pages/ver-servicios/ver-servicios.page.ts","webpack:///src/app/pages/ver-servicios/ver-servicios.page.html","webpack:///src/app/pages/ver-servicios/ver-servicios.module.ts","webpack:///src/app/pages/ver-servicios/ver-servicios.page.scss","webpack:///src/app/services/servicio.service.ts"],"names":["routes","path","component","VerServiciosPageRoutingModule","imports","forChild","exports","VerServiciosPage","servicioService","servicios","habilitado","getCategorias","cargarServicios","getCategoriasServicios","subscribe","resp","categorias","console","log","id","event","segment","value","detail","categoria","pull","getListaServiciosPorCategoria","push","target","complete","error","selector","template","VerServiciosPageModule","declarations","URL","url","ServicioService","http","paginaServicios","categoriaActual","categoria_id","get","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,6BAA6B;AAAA;AAAA,O;;AAA7BA,mCAA6B,6DAJzC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIyC,GAA7BH,6BAA6B,CAA7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAI,gBAAgB;AAM3B,kCAAoBC,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AALpB,eAAAC,SAAA,GAAmB,EAAnB;AACA,eAAAC,UAAA,GAAa,IAAb;AAIyD;;AAN9B;AAAA;AAAA,qCAQV;;;;;;;AACf,6BAAM,KAAKC,aAAL,EAAN;;;AACA;AACA,2BAAKC,eAAL,CAAqB,OAArB;;;;;;;;;AACD;AAZ0B;AAAA;AAAA,0CAcX;AAAA;;AACd,iBAAKJ,eAAL,CAAqBK,sBAArB,GAA8CC,SAA9C,CAAwD,UAAAC,IAAI,EAAI;AAC9D,mBAAI,CAACC,UAAL,GAAkBD,IAAlB;AACAE,qBAAO,CAACC,GAAR,CAAY,KAAI,CAACF,UAAL,CAAgB,CAAhB,EAAmBG,EAA/B;AACD,aAHD;AAID;AAnB0B;AAAA;AAAA,mCAoBlBC,KApBkB,EAoBX;AACd,iBAAKR,eAAL,CAAqB,KAAKS,OAAL,CAAaC,KAAlC,EAAyCF,KAAzC,EAAgD,IAAhD;AACA,iBAAKX,SAAL,GAAiB,EAAjB;AACA,iBAAKC,UAAL,GAAkB,IAAlB;AACD,WAxB0B,CAyB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAjD2B;AAAA;AAAA,0CAmDXU,KAnDW,EAmDJ;AACrB,iBAAKX,SAAL,GAAiB,EAAjB;AACA,iBAAKG,eAAL,CAAqBQ,KAAK,CAACG,MAAN,CAAaD,KAAlC;AACA,iBAAKZ,UAAL,GAAkB,IAAlB;AACD;AAvD0B;AAAA;AAAA,0CAyDXc,SAzDW,EAyDQJ,KAzDR,EAyDuC;AAAA;;AAAA,gBAAvBK,IAAuB,uEAAP,KAAO;AAChE,iBAAKjB,eAAL,CAAqBkB,6BAArB,CAAmDF,SAAnD,EAA8DC,IAA9D,EAAoEX,SAApE,CAA8E,UAAAC,IAAI,EAAI;AAAA;;AACpF,wCAAI,CAACN,SAAL,EAAekB,IAAf,4CAAuBZ,IAAI,CAAC,SAAD,CAA3B;;AACA,kBAAIK,KAAJ,EAAW;AACTA,qBAAK,CAACQ,MAAN,CAAaC,QAAb;;AACA,oBAAId,IAAI,CAAC,MAAD,CAAJ,KAAiB,IAArB,EAA2B;AACzB,wBAAI,CAACL,UAAL,GAAkB,KAAlB;AACD;AACF;AACF,aARD,EAQG,UAAAoB,KAAK,EAAI;AACV,oBAAI,CAACpB,UAAL,GAAkB,KAAlB;AACD,aAVD;AAWD;AArE0B;AAAA;AAAA,mCAwElBU,KAxEkB,EAwEX;AACd,iBAAKR,eAAL,CAAqB,KAAKS,OAAL,CAAaC,KAAlC,EAAyCF,KAAzC;AACD;AA1E0B;;AAAA;AAAA,S;;;;gBAPpB;;;;;;gBAWN,uD;AAAS,iBAAC,yDAAD;;;AAJCb,sBAAgB,6DAL5B,gEAAU;AACTwB,gBAAQ,EAAE,mBADD;AAETC,gBAAQ,EAAR,2EAFS;;AAAA,OAAV,CAK4B,GAAhBzB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;ACTb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCqBF0B,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAVlC,+DAAS;AACR7B,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,2FAJO,EAKP,8EALO,CADD;AAQR8B,oBAAY,EAAE,CAAC,oEAAD;AARN,OAAT,CAUkC,GAAtBD,sBAAsB,CAAtB;;;;;;;;;;;;;;;;ACrBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGf,UAAME,GAAG,GAAG,sEAAYC,GAAxB;;UAIaC,eAAe;AAK1B,iCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAHpB,eAAAC,eAAA,GAAkB,CAAlB;AACA,eAAAC,eAAA,GAAkB,EAAlB;AAEyC,SALf,CAO1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAb0B;AAAA;AAAA,8CAegB;AAAA,gBAAxBC,YAAwB,uEAAT,OAAS;AACxC;AACA;AACA;AACA,iBAAKF,eAAL;AACA,mBAAO,KAAKD,IAAL,CAAUI,GAAV,WAAiBP,GAAjB,yCAAmDM,YAAnD,mBAAwE,KAAKF,eAA7E,EAAP;AACD;AArByB;AAAA;AAAA,wDAuBIf,SAvBJ,EAuBeC,IAvBf,EAuB8B;AACtD,gBAAIA,IAAJ,EAAU;AACR,mBAAKc,eAAL,GAAuB,CAAvB;AACD,aAHqD,CAItD;;;AAEA,gBAAI,KAAKC,eAAL,KAAyBhB,SAA7B,EAAwC;AACtC,mBAAKe,eAAL;AAED,aAHD,MAGO;AACL,mBAAKA,eAAL,GAAuB,CAAvB;AACA,mBAAKC,eAAL,GAAuBhB,SAAvB;AACD;;AAGD,mBAAO,KAAKc,IAAL,CAAUI,GAAV,WAAiBP,GAAjB,yCAAmDX,SAAnD,mBAAqE,KAAKe,eAA1E,EAAP;AACD;AAvCyB;AAAA;AAAA,mDAyCD;AACvB,mBAAO,KAAKD,IAAL,CAAUI,GAAV,WAAiBP,GAAjB,+BAAP;AACD;AA3CyB;;AAAA;AAAA,S;;;;gBANnB;;;;AAMIE,qBAAe,6DAH3B,iEAAW;AACVM,kBAAU,EAAE;AADF,OAAX,CAG2B,GAAfN,eAAe,CAAf","file":"pages-ver-servicios-ver-servicios-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VerServiciosPage } from './ver-servicios.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VerServiciosPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VerServiciosPageRoutingModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonSegment } from '@ionic/angular';\nimport { ServicioService } from '../../services/servicio.service';\n\n@Component({\n  selector: 'app-ver-servicios',\n  templateUrl: './ver-servicios.page.html',\n  styleUrls: ['./ver-servicios.page.scss'],\n})\nexport class VerServiciosPage implements OnInit {\n  servicios: any[] = [];\n  habilitado = true;\n  categorias: any;\n  @ViewChild(IonSegment) segment: IonSegment;\n\n  constructor(private servicioService: ServicioService) { }\n\n  async ngOnInit() {\n    await this.getCategorias();\n    // this.segment.value = \"\"+22;\n    this.cargarServicios('todas');\n  }\n\n  getCategorias() {\n    this.servicioService.getCategoriasServicios().subscribe(resp => {\n      this.categorias = resp;\n      console.log(this.categorias[0].id);\n    })\n  }\n  recargar(event) {\n    this.cargarServicios(this.segment.value, event, true);\n    this.servicios = [];\n    this.habilitado = true;\n  }\n  // getServiciosPorCategoria(event, pull: boolean = false) {\n  //   console.log(event.detail.value);\n  //   this.servicioService.getListaServiciosPorCategoria(pull,event.detail.value).subscribe(resp => {\n  //     this.servicios.push(...resp['results']);\n  //     if (event) {\n  //       event.target.complete();\n  //       if (resp['next'] === null) {\n  //         this.habilitado = false;\n  //       }\n  //     }\n  //   });\n  // }\n  // siguientes(event?, pull: boolean = false) {\n\n  //     this.servicioService.getListaServicios(pull).subscribe(resp => {\n  //       this.servicios.push(...resp['results']);\n  //       if (event) {\n  //         event.target.complete();\n  //         if (resp['next'] === null) {\n  //           this.habilitado = false;\n  //         }\n  //       }\n  //     });\n\n  // }\n\n  cambioCategoria(event) {\n    this.servicios = [];\n    this.cargarServicios(event.detail.value);\n    this.habilitado = true;\n  }\n\n  cargarServicios(categoria: string, event?, pull: boolean = false) {\n    this.servicioService.getListaServiciosPorCategoria(categoria, pull).subscribe(resp => {\n      this.servicios.push(...resp['results']);\n      if (event) {\n        event.target.complete();\n        if (resp['next'] === null) {\n          this.habilitado = false;\n        }\n      }\n    }, error => {\n      this.habilitado = false;\n    });\n  }\n\n\n  loadData(event) {\n    this.cargarServicios(this.segment.value, event);\n  }\n\n\n\n}\n","export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/main\\\" \\n      text=\\\"\\\" \\n      color=\\\"promoshop\\\"\\n      mode=\\\"ios\\\"\\n      ></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Servicios</ion-title>\\n  </ion-toolbar>\\n  <ion-segment scrollable (ionChange)=\\\"cambioCategoria($event)\\\" mode=\\\"md\\\" color=\\\"promoshop\\\" value=\\\"todas\\\">\\n    <ion-segment-button  value=\\\"todas\\\" mode=\\\"md\\\">\\n      <ion-label>Todas</ion-label>\\n    </ion-segment-button>\\n    <ion-segment-button *ngFor=\\\"let categoria of categorias\\\" value=\\\"{{categoria.id}}\\\" mode=\\\"md\\\">\\n      <ion-label>{{categoria.nombre}}</ion-label>\\n    </ion-segment-button>\\n  </ion-segment>\\n</ion-header>\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"recargar($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <app-empresa-horizontal *ngFor=\\\"let servicio of servicios\\\" [empresa]=\\\"servicio\\\">\\n  </app-empresa-horizontal>\\n  <ion-infinite-scroll threshold=\\\"25%\\\" [disabled]=\\\"!habilitado\\\" position=\\\"bottom\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VerServiciosPageRoutingModule } from './ver-servicios-routing.module';\n\nimport { VerServiciosPage } from './ver-servicios.page';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VerServiciosPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [VerServiciosPage]\n})\nexport class VerServiciosPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ZXItc2VydmljaW9zLnBhZ2Uuc2NzcyJ9 */\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nconst URL = environment.url;\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicioService {\n  servicios: any;\n  paginaServicios = 0;\n  categoriaActual = '';\n\n  constructor(private http: HttpClient) { }\n\n  // getListaServicios(pull: boolean = false,categoria_id='todas') {\n  //   if (pull) {\n  //     this.paginaServicios = 0;\n  //   }\n  //   this.paginaServicios++;\n  //   return this.http.get(`${URL}/listaserviciosporcategoria/${categoria_id}?page=${this.paginaServicios}`);\n  // }\n\n  getListaServicios(categoria_id = 'todas') {\n    // if (pull) {\n    //   this.paginaServicios = 0;\n    // }\n    this.paginaServicios++;\n    return this.http.get(`${URL}/listaserviciosporcategoria/${categoria_id}?page=${this.paginaServicios}`);\n  }\n\n  getListaServiciosPorCategoria(categoria, pull: boolean) {\n    if (pull) {\n      this.paginaServicios = 0;\n    }\n    // this.paginaServicios++;\n\n    if (this.categoriaActual === categoria) {\n      this.paginaServicios++;\n\n    } else {\n      this.paginaServicios = 1;\n      this.categoriaActual = categoria;\n    }\n\n\n    return this.http.get(`${URL}/listaserviciosporcategoria/${categoria}?page=${this.paginaServicios}`);\n  }\n\n  getCategoriasServicios() {\n    return this.http.get(`${URL}/listacategoriasservicios`);\n  }\n}\n"]}